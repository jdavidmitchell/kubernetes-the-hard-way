---
- hosts: controller-0
  remote_user: ubuntu 
  become: yes

  pre_tasks:
    - name: Ensure Pip is installed.
      package:
        name: python-pip
        state: present

    - name: Ensure OpenShift client is installed.
      pip:
        name: openshift
        state: present
  
  tasks:
    - name: Create Tiller ServiceAccount.
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: tiller
            namespace: kube-system

    - name: Apply Tiller RBAC definition.
      k8s:
        state: present
        definition: "{{ lookup('file', 'tiller-rbac.yml') | from_yaml }}"

    - name: Retrieve helm binary archive.
      unarchive:
        src: https://storage.googleapis.com/kubernetes-helm/helm-v2.14.1-linux-amd64.tar.gz
        dest: /tmp
        creates: /usr/local/bin/helm
        remote_src: yes

    - name: Move helm binary into place.
      command: >
        cp /tmp/linux-amd64/helm /usr/local/bin/helm
        creates=/usr/local/bin/helm

    - name: Set up Helm and Tiller.
      command: helm init --service-account tiller
      register: helm_init_result
      changed_when: "'already installed' not in helm_init_result.stdout"

    - name: Get Tiller's ClusterIP.
      k8s:
        api_version: v1
        kind: Service
        name: tiller-deploy
        namespace: kube-system
      register: tiller_service

    - name: Set the Helm host and port.
      set_fact:
        helm_host: "{{ tiller_service.result.spec.clusterIP }}"
        helm_port: "{{ tiller_service.result.spec.ports[0].port }}"

    - name: Wait for Tiller to become responsive.
      wait_for:
        host: '{{ helm_host }}'
        port: '{{ helm_port }}'
        state: started

    - name: List installed Helm charts.
      command: helm list
      environment:
        HELM_HOST: '{{ helm_host }}:{{ helm_port }}'
      register: helm_list_results
      changed_when: False

    - name: Print installed Helm charts.
      debug:
        msg: '{{ helm_list_results.stdout }}'

